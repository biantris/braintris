"use strict";(self.webpackChunkbraintris=self.webpackChunkbraintris||[]).push([[2365],{1650:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"javascript/functions-vs-class","title":"Fun\xe7\xf5es vs Classes","description":"Em JavaScript, fun\xe7\xf5es e classes s\xe3o duas formas diferentes de se criar estruturas de c\xf3digo reutiliz\xe1veis.","source":"@site/docs/javascript/functions-vs-class.md","sourceDirName":"javascript","slug":"/javascript/functions-vs-class","permalink":"/braintris/en/docs/javascript/functions-vs-class","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"this","permalink":"/braintris/en/docs/tags/this"},{"inline":true,"label":"javascript","permalink":"/braintris/en/docs/tags/javascript"},{"inline":true,"label":"content","permalink":"/braintris/en/docs/tags/content"},{"inline":true,"label":"pt-br","permalink":"/braintris/en/docs/tags/pt-br"}],"version":"current","lastUpdatedBy":"biantris","lastUpdatedAt":1746293510000,"frontMatter":{"id":"functions-vs-class","title":"Fun\xe7\xf5es vs Classes","tags":["this","javascript","content","pt-br"],"slug":"functions-vs-class","group":"javascript/"},"sidebar":"tutorialSidebar","previous":{"title":"Eventos no JavaScript","permalink":"/braintris/en/docs/javascript/eventos-de-clique"},"next":{"title":"Promise","permalink":"/braintris/en/docs/javascript/promise"}}');var o=n(4848),i=n(8453);const r={id:"functions-vs-class",title:"Fun\xe7\xf5es vs Classes",tags:["this","javascript","content","pt-br"],slug:"functions-vs-class",group:"javascript/"},t=void 0,c={},d=[{value:"Diferen\xe7as:",id:"diferen\xe7as",level:3},{value:"Leia mais sobre",id:"leia-mais-sobre",level:4}];function l(e){const s={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.p,{children:"Em JavaScript, fun\xe7\xf5es e classes s\xe3o duas formas diferentes de se criar estruturas de c\xf3digo reutiliz\xe1veis."}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"disclaimer:"})," esse texto \xe9 mais voltado para o estudo de ",(0,o.jsx)(s.strong,{children:"classes"})," em JavaScript"]}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"diferen\xe7as",children:"Diferen\xe7as:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Sintaxe"}),": A sintaxe para criar fun\xe7\xf5es e classes s\xe3o diferentes. Fun\xe7\xf5es s\xe3o definidas usando a palavra-chave ",(0,o.jsx)(s.code,{children:"function"}),", enquanto classes s\xe3o definidas usando a palavra-chave ",(0,o.jsx)(s.code,{children:"class"}),"."]}),"\n",(0,o.jsx)(s.p,{children:"ex.1"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"function nomeDaFuncao(parametro1, parametro2) {\n  // bloco de c\xf3digo da fun\xe7\xe3o\n  return resultado;\n}\n"})}),"\n",(0,o.jsx)(s.p,{children:"ex.2"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"class NomeDaClasse {\n  constructor(parametro1, parametro2) {\n    // bloco de c\xf3digo do construtor\n  }\n\n  metodo1() {\n    // bloco de c\xf3digo do m\xe9todo\n  }\n\n  metodo2() {\n    // bloco de c\xf3digo do m\xe9todo\n  }\n}\n"})}),"\n"]}),"\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Construtores"}),": As classes tem um m\xe9todo especial chamado ",(0,o.jsx)(s.code,{children:"construtor"}),", que \xe9 chamado quando uma nova inst\xe2ncia da classe \xe9 criada. Fun\xe7\xf5es n\xe3o tem um m\xe9todo ",(0,o.jsx)(s.code,{children:"construtor"})," padr\xe3o, mas podem ter argumentos que s\xe3o usados para inicializar a fun\xe7\xe3o."]}),"\n",(0,o.jsx)(s.p,{children:"ex."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:"// Criando uma classe de usu\xe1rio\nclass Usuario {\n  constructor(nome, idade, email) {\n    this.nome = nome;\n    this.idade = idade;\n    this.email = email;\n  }\n\n  // M\xe9todo para exibir informa\xe7\xf5es do usu\xe1rio\n  exibirInfo() {\n    console.log(\n      `Nome: ${this.nome}, Idade: ${this.idade}, Email: ${this.email}`,\n    );\n  }\n}\n\n// Criando um objeto usu\xe1rio com o construtor da classe\nconst usuario1 = new Usuario('Jo\xe3o', 30, 'joao@example.com');\n\n// Chamando o m\xe9todo para exibir informa\xe7\xf5es do usu\xe1rio\nusuario1.exibirInfo();\n"})}),"\n"]}),"\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Heran\xe7as"}),": As classes permitem a cria\xe7\xe3o de hierarquias de classes, onde uma classe pode ser definida como exten\xe7\xe3o de outra classe existente, e herdar seus m\xe9todos e propriedades. Fun\xe7\xf5es n\xe3o tem um recurso de heran\xe7a integrado."]}),"\n",(0,o.jsx)(s.p,{children:"ex."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'// Definindo uma classe "Pessoa" como classe base\nclass Pessoa {\n  constructor(nome, idade) {\n    this.nome = nome;\n    this.idade = idade;\n  }\n\n  apresentar() {\n    console.log(\n      `Ol\xe1, meu nome \xe9 ${this.nome} e eu tenho ${this.idade} anos.`,\n    );\n  }\n}\n\n// Definindo uma classe "Usuario" que herda da classe "Pessoa"\nclass Usuario extends Pessoa {\n  constructor(nome, idade, email, senha) {\n    super(nome, idade); // Chama o construtor da classe base para definir o nome e a idade\n    this.email = email;\n    this.senha = senha;\n  }\n\n  logar() {\n    console.log(`Usu\xe1rio ${this.email} fez login.`);\n  }\n\n  // Sobrescreve o m\xe9todo "apresentar" da classe base\n  apresentar() {\n    console.log(\n      `Ol\xe1, meu nome \xe9 ${this.nome} e eu tenho ${this.idade} anos. Meu e-mail \xe9 ${this.email}.`,\n    );\n  }\n}\n\n// Criando um novo objeto da classe "Usuario"\nconst usuario1 = new Usuario(\'Jo\xe3o\', 30, \'joao@mail.com\', \'12345\');\n\n// Chamando o m\xe9todo "apresentar" do objeto\nusuario1.apresentar(); // Ol\xe1, meu nome \xe9 Jo\xe3o e eu tenho 30 anos. Meu e-mail \xe9 joao@mail.com.\n\n// Chamando o m\xe9todo "logar" do objeto\nusuario1.logar(); // Usu\xe1rio joao@mail.com fez login.\n'})}),"\n"]}),"\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"Inst\xe2ncias"}),": As classes s\xe3o usadas para criar inst\xe2ncias de objetos, enquanto as fun\xe7\xf5es geralmente s\xe3o usadas como blocos de c\xf3digo reutiliz\xe1veis que podem ser chamados v\xe1rias vezes."]}),"\n",(0,o.jsx)(s.p,{children:"ex."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-js",children:'//Suponha que temos a classe User com as propriedades name e email, e o m\xe9todo sendEmail(), que envia um e-mail para o usu\xe1rio:\n\nclass User {\n  constructor(name, email) {\n    this.name = name;\n    this.email = email;\n  }\n\n  sendEmail() {\n    // C\xf3digo para enviar um e-mail\n    console.log(`E-mail enviado para ${this.name} (${this.email})`);\n  }\n}\n\n//Podemos criar uma inst\xe2ncia da classe User da seguinte maneira:\nconst user1 = new User(\'Jo\xe3o\', \'joao@email.com\');\n\n//Neste exemplo, estamos criando uma inst\xe2ncia da classe User chamada user1 com as propriedades name igual a "Jo\xe3o" e email igual a "joao@email.com".\n\n//Para chamar o m\xe9todo sendEmail() da inst\xe2ncia user1, podemos fazer o seguinte:\n\nuser1.sendEmail(); // imprime "E-mail enviado para Jo\xe3o (joao@email.com)"\n\n//Desta forma, estamos chamando o m\xe9todo sendEmail() na inst\xe2ncia user1, que imprimir\xe1 a mensagem "E-mail enviado para Jo\xe3o (joao@email.com)" no console.\n'})}),"\n"]}),"\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.strong,{children:"M\xe9todos"}),": As classes geralmente tem m\xe9todos que s\xe3o usados para definir comportamentos espec\xedficos do objeto. As fun\xe7\xf5es tamb\xe9m podem ter m\xe9todos, mas geralmente s\xe3o utilizados para definir comportamentos mais gerais e gen\xe9ricos."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(s.h4,{id:"leia-mais-sobre",children:"Leia mais sobre"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes",children:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"})}),"\n"]})]})}function m(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>t});var a=n(6540);const o={},i=a.createContext(o);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);